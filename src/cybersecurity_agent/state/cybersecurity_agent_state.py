from pydantic import BaseModel, Field
from typing import Optional

from agent_core.state import Target
from scan_agent.state.scan_agent_state import ScanAgentSummary
from attack_agent.state.attack_agent_state import AttackReportSummary
from typing import TypedDict


class CybersecurityReport(BaseModel):
    executive_summary: str = Field(
        description="High-level executive summary of the complete assessment"
    )
    target_overview: str = Field(
        description="Overview of the target system and technology stack"
    )
    reconnaissance_findings: str = Field(
        description="Summary of reconnaissance phase findings"
    )
    exploitation_results: str = Field(
        description="Summary of attack execution and exploitation results"
    )
    business_impact: str = Field(
        description="Business impact assessment of discovered vulnerabilities"
    )
    risk_prioritization: str = Field(
        description="Risk-prioritized recommendations for remediation"
    )
    compliance_implications: str = Field(
        description="Regulatory and compliance considerations"
    )
    timeline_summary: str = Field(
        description="Complete timeline from reconnaissance to exploitation"
    )

    def to_markdown(self) -> str:
        """Generate a comprehensive markdown report from the cybersecurity assessment."""
        report = []

        # Title and Header
        report.append("# 🛡️ Comprehensive Cybersecurity Assessment Report")
        report.append("")
        report.append("---")
        report.append("")

        # Executive Summary
        if self.executive_summary:
            report.append("## 📋 Executive Summary")
            report.append("")
            report.append(self.executive_summary)
            report.append("")

        # Target Overview
        if self.target_overview:
            report.append("## 🎯 Target Overview")
            report.append("")
            report.append(self.target_overview)
            report.append("")

        # Reconnaissance Findings
        if self.reconnaissance_findings:
            report.append("## 🔍 Reconnaissance Findings")
            report.append("")
            report.append(self.reconnaissance_findings)
            report.append("")

        # Exploitation Results
        if self.exploitation_results:
            report.append("## ⚔️ Exploitation Results")
            report.append("")
            report.append(self.exploitation_results)
            report.append("")

        # Business Impact
        if self.business_impact:
            report.append("## 💼 Business Impact Assessment")
            report.append("")
            report.append(self.business_impact)
            report.append("")

        # Risk Prioritization
        if self.risk_prioritization:
            report.append("## 🚨 Risk Prioritization & Remediation")
            report.append("")
            report.append(self.risk_prioritization)
            report.append("")

        # Compliance Implications
        if self.compliance_implications:
            report.append("## 📜 Compliance Implications")
            report.append("")
            report.append(self.compliance_implications)
            report.append("")

        # Timeline Summary
        if self.timeline_summary:
            report.append("## ⏱️ Assessment Timeline")
            report.append("")
            report.append(self.timeline_summary)
            report.append("")

        # Footer
        report.append("---")
        report.append("")
        report.append("*Report generated by Cybersecurity Agent* 🛡️")
        report.append("")

        return "\n".join(report)


class CybersecurityAgentState(TypedDict):
    target: Target
    scan_summary: ScanAgentSummary | None
    attack_summary: AttackReportSummary | None
    cybersecurity_report: CybersecurityReport | None
